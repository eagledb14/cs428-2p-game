import g from"path";import{fileURLToPath as l,pathToFileURL as I}from"url";import{i as M,c as m}from"./source-map-53867ec2.mjs";import{t as S,a as R}from"./index-915aae05.mjs";import{r as A}from"./resolve-ts-path-a8cb04a4.mjs";import{parseTsconfig as J,getTsconfig as L,createFilesMatcher as W,createPathsMatcher as $}from"get-tsconfig";import k from"fs";const f=new Map;async function b(t){if(f.has(t))return f.get(t);if(!await k.promises.access(t).then(()=>!0,()=>!1)){f.set(t,void 0);return}const o=await k.promises.readFile(t,"utf8");try{const e=JSON.parse(o);return f.set(t,e),e}catch{throw new Error(`Error parsing: ${t}`)}}async function x(t){let s=new URL("package.json",t);for(;!s.pathname.endsWith("/node_modules/package.json");){const o=l(s),e=await b(o);if(e)return e;const r=s;if(s=new URL("../package.json",s),s.pathname===r.pathname)break}}async function C(t){var s;const o=await x(t);return(s=o==null?void 0:o.type)!=null?s:"commonjs"}const u=M(),d=process.env.ESBK_TSCONFIG_PATH?{path:g.resolve(process.env.ESBK_TSCONFIG_PATH),config:J(process.env.ESBK_TSCONFIG_PATH)}:L(),N=d&&W(d),O=d&&$(d),y="file://",h=/\.([cm]?ts|[tj]sx)($|\?)/,w=/\.json(?:$|\?)/,K=t=>{const s=g.extname(t);if(s===".json")return"json";if(s===".mjs"||s===".mts")return"module";if(s===".cjs"||s===".cts")return"commonjs"},v=t=>{const s=K(t);if(s)return s;if(h.test(t))return C(t)},j=/\/(?:$|\?)/,q=m([20,0,0])>=0;let _=process.send?process.send.bind(process):void 0,P;const B=({port:t})=>(P=t,_=t.postMessage.bind(t),`
	const require = getBuiltin('module').createRequire("${import.meta.url}");
	require('tsx/source-map').installSourceMapSupport(port);
	if (process.send) {
		port.addListener('message', (message) => {
			if (message.type === 'dependency') {
				process.send(message);
			}
		});
	}
	port.unref(); // Allows process to exit without waiting for port to close
	`),G=q?B:void 0,E=async(t,s,o)=>{const e=await t(s,o);return!e.format&&e.url.startsWith(y)&&(e.format=await v(e.url)),e},H=[".js",".json",".ts",".tsx",".jsx"];async function T(t,s,o){const[e,r]=t.split("?");let c;for(const n of H)try{return await E(o,e+n+(r?`?${r}`:""),s)}catch(a){if(c===void 0&&a instanceof Error){const{message:i}=a;a.message=a.message.replace(`${n}'`,"'"),a.stack=a.stack.replace(i,a.message),c=a}}throw c}async function F(t,s,o){const e=j.test(t),r=e?"index":"/index",[c,n]=t.split("?");try{return await T(c+r+(n?`?${n}`:""),s,o)}catch(a){if(!e)try{return await T(t,s,o)}catch{}const i=a,{message:p}=i;throw i.message=i.message.replace(`${r.replace("/",g.sep)}'`,"'"),i.stack=i.stack.replace(p,i.message),i}}const Q=/^\.{1,2}\//,X=m([14,13,1])>=0||m([12,20,0])>=0,D=async function(t,s,o,e){var r;if(!X&&t.startsWith("node:")&&(t=t.slice(5)),j.test(t))return await F(t,s,o);const c=t.startsWith(y)||Q.test(t);if(O&&!c&&!((r=s.parentURL)!=null&&r.includes("/node_modules/"))){const n=O(t);for(const a of n)try{return await D(I(a).toString(),s,o)}catch{}}if(h.test(s.parentURL)){const n=A(t);if(n)for(const a of n)try{return await E(o,a,s)}catch(i){const{code:p}=i;if(p!=="ERR_MODULE_NOT_FOUND"&&p!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw i}}try{return await E(o,t,s)}catch(n){if(n instanceof Error&&!e){const{code:a}=n;if(a==="ERR_UNSUPPORTED_DIR_IMPORT")try{return await F(t,s,o)}catch(i){if(i.code!=="ERR_PACKAGE_IMPORT_NOT_DEFINED")throw i}if(a==="ERR_MODULE_NOT_FOUND")try{return await T(t,s,o)}catch{}}throw n}},V=async function(t,s,o){var e;_&&_({type:"dependency",path:t}),w.test(t)&&(s.importAssertions||(s.importAssertions={}),s.importAssertions.type="json");const r=await o(t,s);if(!r.source)return r;const c=t.startsWith("file://")?l(t):t,n=r.source.toString();if(r.format==="json"||h.test(t)){const a=await S(n,c,{tsconfigRaw:(e=N)==null?void 0:e(c)});return{format:"module",source:u(a,t,P)}}if(r.format==="module"){const a=R(c,n);a&&(r.source=u(a,t,P))}return r},z=async function(t,s,o){if(w.test(t))return{format:"module"};try{return await o(t,s,o)}catch(e){if(e.code==="ERR_UNKNOWN_FILE_EXTENSION"&&t.startsWith(y)){const r=await v(t);if(r)return{format:r}}throw e}},Y=async function(t,s,o){var e;const{url:r}=s,c=r.startsWith("file://")?l(r):r;if(process.send&&process.send({type:"dependency",path:r}),w.test(r)||h.test(r)){const a=await S(t.toString(),c,{tsconfigRaw:(e=N)==null?void 0:e(c)});return{source:u(a,r)}}const n=await o(t,s,o);if(s.format==="module"){const a=R(c,n.source.toString());a&&(n.source=u(a,r))}return n},U=m([16,12,0])<0,Z=U?z:void 0,tt=U?Y:void 0;export{Z as a,G as g,V as l,D as r,tt as t};
